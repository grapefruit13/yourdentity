name: Firebase Functions 자동 배포

on:
  push:
    branches:
      - "main"
    paths:
      - "be/functions/**"
      - ".github/workflows/firebase-deploy.yml"

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    name: Functions Deploy Job
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: pnpm 설치
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          cache-dependency-path: "be/functions/pnpm-lock.yaml"

      - name: Firebase CLI 설치
        run: npm install -g firebase-tools@12.9.1

      - name: Firebase 서비스 계정 인증
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: 배포용 .env 생성
        working-directory: be/functions
        shell: bash
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
        run: |
          set -euo pipefail
          
          echo "📝 배포용 .env 생성 시작"
          
          # 파일 권한 제한 (보안)
          umask 077
          
          # 기존 .env 파일 제거 후 새로 생성
          rm -f .env
          touch .env
          chmod 600 .env
          
          # 기본 환경 설정
          echo "NODE_ENV=production" > .env
          
          # GitHub Secret의 환경변수를 .env에 주입
          # 주석/빈 줄/CRLF 제거 후 key=value 라인만 반영
          if [ -n "${ENV_VARS:-}" ]; then
            appended_count=$(
              printf '%s\n' "$ENV_VARS" \
              | tr -d '\r' \
              | grep -Ev '^[[:space:]]*#|^[[:space:]]*$' \
              | grep -E '^[A-Za-z_][A-Za-z0-9_]*=' \
              | tee -a .env \
              | wc -l | tr -d ' '
            )
          else
            echo "❌ 오류: ENV_VARS Secret이 비어있습니다" >&2
            exit 1
          fi
          
          # .env 파일 생성 완료 확인 (실제 환경변수 라인이 최소 1개 존재해야 함)
          if [ "${appended_count:-0}" -lt 1 ]; then
            echo "❌ 오류: 유효한 ENV_VARS 항목이 없습니다 (주석/빈 줄 제외 시 0개)" >&2
            exit 1
          fi
          
          line_count=$(wc -l < .env | tr -d ' ')
          echo "✅ .env 생성 완료: 총 ${line_count}줄 (ENV ${appended_count}개)"

      - name: 빌드 테스트
        working-directory: be/functions
        run: |
          echo "📦 의존성 설치 시작"
          pnpm install --frozen-lockfile
          
          echo "🔨 빌드 테스트 시작"
          pnpm run build
          
          echo "✅ 빌드 테스트 완료"

      - name: Firebase Functions 배포
        working-directory: be/functions
        id: deploy
        run: |
          echo "🚀 Firebase Functions 배포 시작"
          firebase deploy --only functions
          echo "deploy-success=true" >> $GITHUB_OUTPUT

      - name: 배포 성공 로그
        if: success()
        run: |
          echo " ================================"
          echo " Firebase Functions 배포 성공!"
          echo " ================================"
          echo " Commit: ${GITHUB_SHA:0:7}"
          echo " Branch: ${GITHUB_REF#refs/heads/}"
          echo " 배포 시간: $(date '+%Y-%m-%d %H:%M:%S KST')"
          echo " Repository: ${{ github.repository }}"

      - name: 배포 실패 로그
        if: failure()
        run: |
          echo " ================================"
          echo " Firebase Functions 배포 실패"
          echo " ================================"
          echo " Commit: ${GITHUB_SHA:0:7}"
          echo " Branch: ${GITHUB_REF#refs/heads/}"
          echo " 실패 시간: $(date '+%Y-%m-%d %H:%M:%S KST')"
          echo " 워크플로우 로그:"
          echo "   ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
